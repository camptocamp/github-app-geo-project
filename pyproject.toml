[tool.black]
line-length = 110
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 110
known_first_party = "github_app_geo_project"

[tool.mypy]
python_version = "3.11"
warn_redundant_casts = true
warn_unused_ignores = true
ignore_missing_imports = true
strict = true

[tool.poetry]
name = "github-app-geo-project"
version = "0.0.0"
description = ""
readme = "README.md"
authors = ["St√©phane Brunner <stephane.brunner@camptocamp.com>"]
repository = "https://github.com/camptocamp/github-app-geo-project"
license = "BSD-2-Clause"
keywords = ["github", "application", "pyramid"]
packages = [{ include = "github_app_geo_project" }]
include = ["github_app_geo_project/py.typed"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Typing :: Typed",
]

[tool.poetry.scripts]
process-queue = "github_app_geo_project.scripts.process_queue:main"
send-event = "github_app_geo_project.scripts.send_event:main"
health-check = "github_app_geo_project.scripts.health_check:main"

[tool.poetry.plugins."paste.app_factory"]
main = "github_app_geo_project.server:main"

[tool.poetry.plugins."ghci.module"]
test = "github_app_geo_project.module.tests:TestModule"
changelog = "github_app_geo_project.module.standard.changelog:Changelog"
audit = "github_app_geo_project.module.audit:Audit"
auto-review = "github_app_geo_project.module.standard.auto_review:AutoReview"
auto-merge = "github_app_geo_project.module.standard.auto_merge:AutoMerge"
auto-close = "github_app_geo_project.module.standard.auto_close:AutoClose"
patch = "github_app_geo_project.module.standard.patch:Patch"
versions = "github_app_geo_project.module.versions:Versions"
workflow = "github_app_geo_project.module.workflow:Workflow"
pull-request-checks = "github_app_geo_project.module.pull_request.checks:Checks"
pull-request-links = "github_app_geo_project.module.pull_request.links:Links"
delete-old-workflow-runs = "github_app_geo_project.module.delete_old_workflow_runs:DeleteOldWorkflowRuns"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
c2cwsgiutils = { version = "6.1.3",  extras = ["standard", "debug", "dev"] }
c2cciutils = "1.7.1"
security-md = "0.2.3"
pyramid-mako = "1.1.0"
jsonmerge = "1.9.2"
pygithub = "2.5.0"
markdown = "3.7"
pygments = "2.18.0"
html-sanitizer = "2.4.4"
ansi2html = "1.9.2"
apt-repo = "0.5"
debian-inspector = "31.1.0"
codespell = "2.3.0"
pydantic = "2.9.2"
markdownify = "0.13.1"
responses = "0.25.3"
pytest-asyncio = "0.24.0"
cryptography = "43.0.3"
urllib3 = "2.2.3"
certifi = "2024.8.30"
sentry-sdk = "2.18.0"
webob = "1.8.9"
waitress = "3.0.1"

[tool.poetry.group.dev.dependencies]
c2cwsgiutils = { version = "6.1.3",  extras = ["test-images"] }
prospector = { extras = ["with_mypy", "with_bandit", "with_pyroma", "with_ruff"], version = "1.13.2" }
prospector-profile-duplicated = "1.7.0"
prospector-profile-utils = "1.11.1"
pytest = "8.3.3"
WebTest = "3.0.1"
types-pyyaml = "6.0.12.20240917"
types-setuptools = "75.3.0.20241112"
types-markdown = "3.7.0.20240822"
types-requests = "2.32.0.20241016"
types-toml = "0.10.8.20240310"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version", "poetry-plugin-drop-python-upper-constraint", "poetry-plugin-export"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "version_branch" -%}
{{serialize_pep440(bump_version(base, 1 if env.get("IS_MASTER") == "TRUE" else 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"
