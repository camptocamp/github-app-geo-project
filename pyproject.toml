[tool.ruff]
target-version = "py311"
line-length = 110

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poetry]
version = "0.0.0"
description = ""

[tool.poetry.plugins."paste.app_factory"]
main = "github_app_geo_project.server:main"

[tool.poetry.plugins."ghci.module"]
dispatcher = "github_app_geo_project.module.internal:Dispatcher"
test = "github_app_geo_project.module.tests:TestModule"
changelog = "github_app_geo_project.module.standard.changelog:Changelog"
audit = "github_app_geo_project.module.audit:Audit"
auto-review = "github_app_geo_project.module.standard.auto_review:AutoReview"
auto-merge = "github_app_geo_project.module.standard.auto_merge:AutoMerge"
auto-close = "github_app_geo_project.module.standard.auto_close:AutoClose"
patch = "github_app_geo_project.module.standard.patch:Patch"
versions = "github_app_geo_project.module.versions:Versions"
workflow = "github_app_geo_project.module.workflow:Workflow"
pull-request-checks = "github_app_geo_project.module.pull_request.checks:Checks"
pull-request-links = "github_app_geo_project.module.pull_request.links:Links"
delete-old-workflow-runs = "github_app_geo_project.module.delete_old_workflow_runs:DeleteOldWorkflowRuns"
dispatch-publishing = "github_app_geo_project.module.dispatch_publishing:DispatchPublishing"
clean = "github_app_geo_project.module.clean:Clean"
backport = "github_app_geo_project.module.backport:Backport"
outdated-comments = "github_app_geo_project.module.outdated_comments:OutdatedComments"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
c2cwsgiutils = { version = "6.1.7",  extras = ["standard", "debug", "dev"] }
c2cciutils = "1.7.3"
security-md = "1.0.0"
pyramid-mako = "1.1.0"
jsonmerge = "1.9.2"
markdown = "3.8"
pygments = "2.19.1"
html-sanitizer = "2.5.0"
ansi2html = "1.9.2"
apt-repo = "0.5"
debian-inspector = "31.1.0"
codespell = "2.4.1"
pydantic = "2.11.5"
markdownify = "1.1.0"
aioresponses = "0.7.8"
pytest-asyncio = "1.0.0"
cryptography = "45.0.4"
urllib3 = "2.4.0"
certifi = "2025.6.15"
sentry-sdk = "2.29.1"
webob = "1.8.9"
waitress = "3.0.2"
lxml-html-clean = "0.4.2"
tag-publish = "1.1.1"
aiohttp = "3.12.6"
aiofiles = "24.1.0"
githubkit = { version = "0.12.13", extras = ["auth-app"] }
deprecated = "1.2.18"
aiomonitor = "0.7.1"
sqlalchemy = {extras = ["asyncio"], version = "2.0.41"}
asyncpg = "0.30.0"

[tool.poetry.group.dev.dependencies]
c2cwsgiutils = { version = "6.1.7",  extras = ["test-images"] }
prospector = { extras = ["with_mypy", "with_bandit", "with_pyroma", "with_ruff"], version = "1.17.1" }
prospector-profile-duplicated = "1.10.5"
prospector-profile-utils = "1.22.3"
pytest = "8.3.5"
WebTest = "3.0.4"
types-pyyaml = "6.0.12.20250516"
types-setuptools = "80.9.0.20250529"
types-markdown = "3.8.0.20250415"
types-requests = "2.32.0.20250515"
types-aiofiles = "24.1.0.20250516"
types-deprecated = "1.2.15.20250304"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[project]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Typing :: Typed',
]
dynamic = ["dependencies", "version"]
name = "github-app-geo-project"
readme = "README.md"
keywords = ["github", "application", "pyramid"]
license = "BSD-2-Clause"
authors = [{name = "StÃ©phane Brunner",email = "stephane.brunner@camptocamp.com"}]
packages = [{ include = "github_app_geo_project" }]
include = ["github_app_geo_project/py.typed"]
requires-python = ">=3.11"
dependencies = ["c2cwsgiutils[debug,dev,standard]", "c2cciutils", "security-md", "pyramid-mako", "jsonmerge", "markdown", "pygments", "html-sanitizer", "ansi2html", "apt-repo", "debian-inspector", "codespell", "pydantic", "markdownify", "aioresponses", "pytest-asyncio", "cryptography", "urllib3", "certifi", "sentry-sdk", "webob", "waitress", "lxml-html-clean", "tag-publish", "aiohttp", "aiofiles", "githubkit[auth-app]", "deprecated", "aiomonitor", "sqlalchemy[asyncio]", "asyncpg"]

[project.urls]
repository = "https://github.com/camptocamp/github-app-geo-project"
"Bug Tracker" = "https://github.com/camptocamp/github-app-geo-project/issues"

[project.scripts]
process-queue = "github_app_geo_project.scripts.process_queue:main"
send-event = "github_app_geo_project.scripts.send_event:main"
health-check = "github_app_geo_project.scripts.health_check:main"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version", "poetry-plugin-export"]
build-backend = "poetry.core.masonry.api"
