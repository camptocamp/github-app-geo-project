[tool.poetry]
name = "github-app-geo-project"
version = "0.0.0"
description = ""
readme = "README.md"
authors = ["St√©phane Brunner <stephane.brunner@camptocamp.com>"]
repository = "https://github.com/camptocamp/github-app-geo-project"
license = "BSD-2-Clause"
keywords = ["github", "application", "pyramid"]
packages = [{ include = "github_app_geo_project" }]
include = ["github_app_geo_project/py.typed"]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Typing :: Typed',
]

[tool.poetry.scripts]
process-queue = "github_app_geo_project.scripts.process_queue:main"
send-event = "github_app_geo_project.scripts.send_event:main"
health-check = "github_app_geo_project.scripts.health_check:main"

[tool.poetry.plugins."paste.app_factory"]
main = "github_app_geo_project.server:main"

[tool.poetry.plugins."ghci.module"]
test = "github_app_geo_project.module.tests:TestModule"
changelog = "github_app_geo_project.module.standard.changelog:Changelog"
audit = "github_app_geo_project.module.audit:Audit"
auto-review = "github_app_geo_project.module.standard.auto_review:AutoReview"
auto-merge = "github_app_geo_project.module.standard.auto_merge:AutoMerge"
auto-close = "github_app_geo_project.module.standard.auto_close:AutoClose"
patch = "github_app_geo_project.module.standard.patch:Patch"
versions = "github_app_geo_project.module.versions:Versions"
workflow = "github_app_geo_project.module.workflow:Workflow"
pull-request-checks = "github_app_geo_project.module.pull_request.checks:Checks"
pull-request-links = "github_app_geo_project.module.pull_request.links:Links"
delete-old-workflow-runs = "github_app_geo_project.module.delete_old_workflow_runs:DeleteOldWorkflowRuns"
dispatch-publishing = "github_app_geo_project.module.dispatch_publishing:DispatchPublishing"
clean = "github_app_geo_project.module.clean:Clean"
backport = "github_app_geo_project.module.backport:Backport"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
c2cwsgiutils = { version = "6.1.7",  extras = ["standard", "debug", "dev"] }
c2cciutils = "1.7.3"
security-md = "1.0.0"
pyramid-mako = "1.1.0"
jsonmerge = "1.9.2"
pygithub = "2.6.1"
markdown = "3.7"
pygments = "2.19.1"
html-sanitizer = "2.5.0"
ansi2html = "1.9.2"
apt-repo = "0.5"
debian-inspector = "31.1.0"
codespell = "2.4.1"
pydantic = "2.10.6"
markdownify = "1.0.0"
aioresponses = "0.7.8"
pytest-asyncio = "0.25.3"
cryptography = "44.0.1"
urllib3 = "2.3.0"
certifi = "2025.1.31"
sentry-sdk = "2.22.0"
webob = "1.8.9"
waitress = "3.0.2"
lxml-html-clean = "0.4.1"
tag-publish = "1.0.0"
aiohttp = "3.11.13"
aiofiles = "24.1.0"

[tool.poetry.group.dev.dependencies]
c2cwsgiutils = { version = "6.1.7",  extras = ["test-images"] }
prospector = { extras = ["with_mypy", "with_bandit", "with_pyroma", "with_ruff"], version = "1.15.2" }
prospector-profile-duplicated = "1.10.4"
prospector-profile-utils = "1.21.6"
pytest = "8.3.4"
WebTest = "3.0.4"
types-pyyaml = "6.0.12.20241230"
types-setuptools = "75.8.0.20250225"
types-markdown = "3.7.0.20241204"
types-requests = "2.32.0.20241016"
types-aiofiles = "24.1.0.20241221"

[tool.ruff]
target-version = "py311"
line-length = 110

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version", "poetry-plugin-drop-python-upper-constraint", "poetry-plugin-export"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"
