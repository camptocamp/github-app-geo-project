name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

permissions:
  contents: write
  packages: write

  id-token: write
env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 45
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - run: docker system prune --all --force
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Use Python 3.11
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - run: python3 -m pip install --requirement=ci/requirements.txt
      - name: Environment
        run: c2cciutils-env

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()

      - run: pip install --requirement=requirements.txt
      - run: poetry install
      - run: poetry run prospector --output-format=pylint

      - run: |
          echo GHCI_TEST_GITHUB_APP_ID=1234 > .env
          echo GHCI_TEST_GITHUB_APP_PRIVATE_KEY=5678 >> .env
      - run: make build
      - run: make tests
      - run: make acceptance-tests

      - uses: actions/upload-artifact@v4
        with:
          name: Acceptance tests
          path: results
        if: failure()
      - run: c2cciutils-docker-logs
        if: always()

      - run: git reset --hard
        if: failure()
      - name: Publish
        run: tag-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg packages list.patch
          path: /tmp/dpkg.patch
          retention-days: 1
        if: failure()
